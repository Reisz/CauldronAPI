local version = -1 -- prerelease
local thisProgram = shell.getRunningProgram()
local source, dir = string.sub(thisProgram, 1, #thisProgram - #string.match(thisProgram, "/[^/]+$"))

-- prepare terminal
term.setTextColor(colors.white)
term.setBackgroundColor(colors.black)
term.clear()

-- get install directory
write("\nChoose an install path\n> ")
dir = shell.resolve(io.read())
term.clear()
while not dir do
    write("Invalid Path!\nChoose an install path\n> ")
    dir = shell.resolve(io.read()) -- TODO: replace with advanced version (standard value)
    term.clear()
end

write("Starting setup...\n\n")
shell.setDir("")
fs.makeDir(dir)
if not string.find(dir, "/$") then dir = dir .. "/" end

write("Cauldron... ")
    local fileC = fs.open("Cauldron", "w")

    if not fileC then
        write('\nFailed to open the file "Cauldron", setup will be aborted.\n');
        return
    end

    fileC.write("-- Load function generated by Installer\n" ..
                "Cauldron = {}" ..
                "function Cauldron.version() return "..version.." end\n\n")
    fileC.close()
write("ok\n")

-- install more files here

write("Finished installation...\n")
