local args = {...}
local version = -1 -- prerelease
local thisProgram = shell.getRunningProgram()
local source, dir = string.sub(thisProgram, 1, #thisProgram - #string.match(thisProgram, "/[^/]+$") + 1)

local install = function(name)
	if fs.exists(dir .. name) then fs.delete(dir .. name) end
	fs.copy(source .. name, dir .. name)
    write(".")
end

-- prepare terminal
term.setTextColor(colors.white)
term.setBackgroundColor(colors.black)
term.clear()

-- get install directory
shell.setDir("")

if type(args[1]) == "string" then
    dir = shell.resolve(io.read())
end

if not dir then
    write("\nChoose an install path\n> ")
    dir = shell.resolve(io.read())
    term.clear()
    while not dir do
        write("Invalid Path!\nChoose an install path\n> ")
        dir = shell.resolve(io.read()) -- TODO: replace with advanced version (standard value)
        term.clear()
    end
end


write("Starting setup...\n\n")
fs.makeDir(dir)
if not string.find(dir, "/$") then dir = dir .. "/" end

write("Cauldron... ")
    local fileC = fs.open("Cauldron", "w")

    if not fileC then
        write('\nFailed to open the file "Cauldron", setup will be aborted.\n')
        return
    end

    fileC.write("-- Load file generated by installer\n" ..
                "Cauldron = {}\n\n" ..
                "function Cauldron.version() return " .. version .. " end\n\n" ..
                'function Cauldron.libDirectory(sub) return "' .. dir .. '" .. sub end\n\n' ..
                'shell.run("' .. dir .. 'load")\n')
    fileC.close()
write("ok\n")

write("Loader")
	install("load")
	install("middleclass")
write("ok\n")

-- install more files here

write("Finished installation...\n")
